---
kind: Namespace
apiVersion: v1
metadata:
  name: developer-app
---
apiVersion: v1
kind: Pod
metadata:
  name: developer-app
  labels:
    app.kubernetes.io/name: developer-app
    admission.datadoghq.com/enabled: "true"
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: developer-app
  annotations:
    admission.datadoghq.com/java-lib.version: latest
spec:
  containers:
  - name: developer-app
    image: yaalexf/developer-app:nightly
    imagePullPolicy: Always
    env:
    - name: DD_VERSION
      value: 0.1.$(BUILD)
    - name: DD_TAGS
      value: git.commit.sha:$(GIT_COMMIT_SHA),git.repository_url:github.com/yafernandes/sandbox-java-war
    # - name: "DD_JMXFETCH_TOMCAT_ENABLED"
    #   value: "true"
    # - name: DD_APPSEC_ENABLED
    #   value: "false"
    # - name: DD_PROFILING_ENABLED
    #   value: "false"
    # - name: STATSD_PREFIX
    #   value: "micrometer.cardinality.v1"
    # - name: STATSD_PROTOCOL
    #   value: "UDS"
    # - name: STATSD_HOST
    #   value: "/var/run/datadog/dsd.socket"
    resources:
      limits: {}
---
apiVersion: v1
kind: Service
metadata:
  name: developer-app
  namespace: developer-app
spec:
  selector:
    app.kubernetes.io/name: developer-app
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: developer-app
  namespace: developer-app
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /developer-app/$2
spec:
  rules:
  - http:
      paths:
      - path: /(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: developer-app
            port:
              number: 80
---
# loadrunner
# apiVersion: v1
# kind: Pod
# metadata:
#   name: loadrunner
#   namespace: developer-app
#   labels:
#     app.kubernetes.io/name: loadrunner
#     admission.datadoghq.com/enabled: "false"
#     tags.datadoghq.com/env: lab
#     tags.datadoghq.com/service: loadrunner
#     tags.datadoghq.com/version: "0.1"
# spec:
#   containers:
#     - name: load
#       image: alpine
#       imagePullPolicy: Always
#       command: ["sh", "-c", "--"]
#       args:
#         - |-
#           while true
#           do
#             wget -qO /dev/nul http://$NODE:30080/sandbox/servletAPI4
#             sleep 0.0625s
#           done
#       env:
#       - name: NODE
#         valueFrom:
#           fieldRef:
#             fieldPath: spec.nodeName
# ---
